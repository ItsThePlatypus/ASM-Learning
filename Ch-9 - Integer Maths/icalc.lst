     1                                  ; A program to demonstrate integer calculations
     2                                  extern printf
     3                                  
     4                                  section .data
     5 00000000 8000000000000000            number1     dq  128
     6 00000008 1300000000000000            number2     dq  19
     7 00000010 F4FFFFFFFFFFFFFF            negNum      dq  -12
     8                                  
     9 00000018 546865206E756D6265-         fmt         db  "The numbers are %ld and %ld",10,0
     9 00000021 72732061726520256C-
     9 0000002A 6420616E6420256C64-
     9 00000033 0A00               
    10 00000035 257320256C640A00            fmtint      db  "%s %ld",10,0
    11 0000003D 5468652073756D2069-         sumi        db  "The sum is",0
    11 00000046 7300               
    12 00000048 546865206469666665-         difi        db  "The difference is",0
    12 00000051 72656E636520697300 
    13 0000005A 4E756D626572203120-         inci        db  "Number 1 incremented:",0
    13 00000063 696E6372656D656E74-
    13 0000006C 65643A00           
    14 00000070 4E756D626572203120-         deci        db  "Number 1 decremented:",0
    14 00000079 64656372656D656E74-
    14 00000082 65643A00           
    15 00000086 4E756D626572203120-         sali        db  "Number 1 shift left 2 (x4):",0
    15 0000008F 7368696674206C6566-
    15 00000098 74203220287834293A-
    15 000000A1 00                 
    16 000000A2 4E756D626572203120-         sari        db  "Number 1 shift right 2 (/4):",0
    16 000000AB 736869667420726967-
    16 000000B4 6874203220282F3429-
    16 000000BD 3A00               
    17 000000BF 4E756D626572203120-         sariex      db  "Number 1 shift right 2 (/4) with sign extension",0
    17 000000C8 736869667420726967-
    17 000000D1 6874203220282F3429-
    17 000000DA 207769746820736967-
    17 000000E3 6E20657874656E7369-
    17 000000EC 6F6E00             
    18 000000EF 5468652070726F6475-         muli        db  "The product is",0
    18 000000F8 637420697300       
    19 000000FE 54686520696E746567-         divi        db  "The integer quotient is",0
    19 00000107 65722071756F746965-
    19 00000110 6E7420697300       
    20 00000116 546865206D6F64756C-         remi        db  "The modulo is",0
    20 0000011F 6F20697300         
    21                                  
    22                                  section .bss
    23 00000000 <res 00000008>              resulti     resq    1
    24 00000008 <res 00000008>              modulo      resq    1
    25                                  
    26                                  section .text
    27                                      global main
    28                                  
    29                                  main:
    30 00000000 55                          push rbp
    31 00000001 4889E5                      mov rbp, rsp
    32                                  
    33                                      ; Display numbers
    34 00000004 48BF-                       mov rdi, fmt
    34 00000006 [1800000000000000] 
    35 0000000E 488B3425[00000000]          mov rsi, [number1]
    36 00000016 488B1425[08000000]          mov rdx, [number2]
    37 0000001E B800000000                  mov rax, 0
    38 00000023 E8(00000000)                call printf
    39                                  
    40                                      ; Adding
    41 00000028 488B0425[00000000]          mov rax, [number1]
    42 00000030 48030425[08000000]          add rax, [number2]
    43 00000038 48890425[00000000]          mov [resulti], rax
    44                                  
    45 00000040 48BF-                       mov rdi, fmtint
    45 00000042 [3500000000000000] 
    46 0000004A 48BE-                       mov rsi, sumi
    46 0000004C [3D00000000000000] 
    47 00000054 488B1425[00000000]          mov rdx, [resulti]
    48 0000005C B800000000                  mov rax, 0
    49 00000061 E8(00000000)                call printf
    50                                  
    51                                      ; Subtracting
    52 00000066 488B0425[00000000]          mov rax, [number1]
    53 0000006E 482B0425[08000000]          sub rax, [number2]
    54 00000076 48890425[00000000]          mov [resulti], rax
    55                                  
    56 0000007E 48BF-                       mov rdi, fmtint
    56 00000080 [3500000000000000] 
    57 00000088 48BE-                       mov rsi, difi
    57 0000008A [4800000000000000] 
    58 00000092 488B1425[00000000]          mov rdx, [resulti]
    59 0000009A B800000000                  mov rax, 0
    60 0000009F E8(00000000)                call printf
    61                                  
    62                                      ; Incrementing
    63 000000A4 488B0425[00000000]          mov rax, [number1]
    64 000000AC 48FFC0                      inc rax
    65 000000AF 48890425[00000000]          mov [resulti], rax
    66                                  
    67 000000B7 48BF-                       mov rdi, fmtint
    67 000000B9 [3500000000000000] 
    68 000000C1 48BE-                       mov rsi, inci
    68 000000C3 [5A00000000000000] 
    69 000000CB 488B1425[00000000]          mov rdx, [resulti]
    70 000000D3 B800000000                  mov rax, 0
    71 000000D8 E8(00000000)                call printf
    72                                  
    73                                      ; Decrementing
    74 000000DD 488B0425[00000000]          mov rax, [number1]
    75 000000E5 48FFC8                      dec rax
    76 000000E8 48890425[00000000]          mov [resulti], rax
    77                                  
    78 000000F0 48BF-                       mov rdi, fmtint
    78 000000F2 [3500000000000000] 
    79 000000FA 48BE-                       mov rsi, deci
    79 000000FC [7000000000000000] 
    80 00000104 488B1425[00000000]          mov rdx, [resulti]
    81 0000010C B800000000                  mov rax, 0
    82 00000111 E8(00000000)                call printf
    83                                  
    84                                      ; Shift arithmetic left
    85 00000116 488B0425[00000000]          mov rax, [number1]
    86 0000011E 48C1E002                    sal rax, 2
    87 00000122 48890425[00000000]          mov [resulti], rax
    88                                  
    89 0000012A 48BF-                       mov rdi, fmtint
    89 0000012C [3500000000000000] 
    90 00000134 48BE-                       mov rsi, sali
    90 00000136 [8600000000000000] 
    91 0000013E 488B1425[00000000]          mov rdx, [resulti]
    92 00000146 B800000000                  mov rax, 0
    93 0000014B E8(00000000)                call printf
    94                                  
    95                                      ; Shift arithmetic right
    96 00000150 488B0425[00000000]          mov rax, [number1]
    97 00000158 48C1F802                    sar rax, 2
    98 0000015C 48890425[00000000]          mov [resulti], rax
    99                                  
   100 00000164 48BF-                       mov rdi, fmtint
   100 00000166 [3500000000000000] 
   101 0000016E 48BE-                       mov rsi, sari
   101 00000170 [A200000000000000] 
   102 00000178 488B1425[00000000]          mov rdx, [resulti]
   103 00000180 B800000000                  mov rax, 0
   104 00000185 E8(00000000)                call printf
   105                                  
   106                                      ; Shift arithmetic right with sign extension
   107 0000018A 488B0425[10000000]          mov rax, [negNum]
   108 00000192 48C1F802                    sar rax, 2
   109 00000196 48890425[00000000]          mov [resulti], rax
   110                                  
   111 0000019E 48BF-                       mov rdi, fmtint
   111 000001A0 [3500000000000000] 
   112 000001A8 48BE-                       mov rsi, sariex
   112 000001AA [BF00000000000000] 
   113 000001B2 488B1425[00000000]          mov rdx, [resulti]
   114 000001BA B800000000                  mov rax, 0
   115 000001BF E8(00000000)                call printf
   116                                  
   117                                      ; Mulitply 
   118 000001C4 488B0425[00000000]          mov rax, [number1]
   119 000001CC 48F72C25[08000000]          imul qword [number2]
   120 000001D4 48890425[00000000]          mov [resulti], rax
   121                                  
   122 000001DC 48BF-                       mov rdi, fmtint
   122 000001DE [3500000000000000] 
   123 000001E6 48BE-                       mov rsi, muli
   123 000001E8 [EF00000000000000] 
   124 000001F0 488B1425[00000000]          mov rdx, [resulti]
   125 000001F8 B800000000                  mov rax, 0
   126 000001FD E8(00000000)                call printf  
   127                                  
   128                                      ; Divide
   129 00000202 488B0425[00000000]          mov rax, [number1]
   130 0000020A BA00000000                  mov rdx, 0
   131 0000020F 48F73C25[08000000]          idiv qword [number2]
   132 00000217 48890425[00000000]          mov [resulti], rax
   133                                  
   134 0000021F 48BF-                       mov rdi, fmtint
   134 00000221 [3500000000000000] 
   135 00000229 48BE-                       mov rsi, divi
   135 0000022B [FE00000000000000] 
   136 00000233 488B1425[00000000]          mov rdx, [resulti]
   137 0000023B B800000000                  mov rax, 0
   138 00000240 E8(00000000)                call printf
   139 00000245 48BF-                       mov rdi, fmtint
   139 00000247 [3500000000000000] 
   140 0000024F 48BE-                       mov rsi, remi
   140 00000251 [1601000000000000] 
   141 00000259 488B1425[08000000]          mov rdx, [modulo]
   142 00000261 B800000000                  mov rax, 0
   143 00000266 E8(00000000)                call printf
   144                                  
   145 0000026B 4889EC                      mov rsp, rbp
   146 0000026E 5D                          pop rbp
   147 0000026F C3                          ret
