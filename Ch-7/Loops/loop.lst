     1                                  ; A simple loop program 
     2                                  
     3                                  extern printf
     4                                  section .data
     5 00000000 0500000000000000            number dq 5                                 ; Number of times to loop
     6 00000008 5468652073756D2066-         fmt db "The sum from 0 to %ld is %ld",10,0  ; Message to print at the end
     6 00000011 726F6D203020746F20-
     6 0000001A 256C6420697320256C-
     6 00000023 640A00             
     7                                      
     8                                  section .bss
     9                                  
    10                                  section .text
    11                                      global main
    12                                  
    13                                  main:
    14 00000000 55                          push rbp            ; Setup for debugging
    15 00000001 4889E5                      mov rbp, rsp
    16                                      
    17 00000004 B800000000                  mov rax, 0          ; Clear out registers for program start
    18 00000009 BB00000000                  mov rbx, 0
    19                                      
    20                                  jloop:
    21 0000000E 4801D8                      add rax, rbx        ; Add the values in the register together
    22 00000011 48FFC3                      inc rbx             ; Increase the value in rbx by 1
    23 00000014 483B1C25[00000000]          cmp rbx, [number]   ; Compare against our loop stop
    24 0000001C 7EF0                        jle jloop           ; Jump if not done to start of this section
    25                                      
    26 0000001E 48BF-                       mov rdi, fmt        ; Move our string to print here
    26 00000020 [0800000000000000] 
    27 00000028 488B3425[00000000]          mov rsi, [number]   ; Move our stored number here
    28 00000030 4889C2                      mov rdx, rax        ; Empty out rax and store our final value
    29 00000033 B800000000                  mov rax, 0          ; No xmm registers used
    30 00000038 E8(00000000)                call printf         ; Print
    31                                      
    32 0000003D 4889EC                      mov rsp, rbp        ; Clean and quit
    33 00000040 5D                          pop rbp
    34 00000041 C3                          ret
