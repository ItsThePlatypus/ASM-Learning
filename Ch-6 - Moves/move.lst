     1                                  ; How are values stored in registers affected by moves?
     2                                  ; Best viewed in a debugger...
     3                                  
     4                                  section .data
     5 00000000 7B                          bNum    db  123
     6 00000001 3930                        wNum    dw  12345
     7 00000003 52C16C07                    dNum    dd  124567890
     8 00000007 1581E97DF4102211            qNum1   dq  1234567890123456789
     9 0000000F 40E2010000000000            qNum2   dq  123456
    10 00000017 1F85EB51B81E0940            qNum3   dq  3.14
    11                                  
    12                                  section .bss
    13                                  section .text
    14                                      global main
    15                                  
    16                                  main:
    17 00000000 55                          push rbp
    18 00000001 4889E5                      mov rbp, rsp
    19                                  
    20 00000004 48C7C0FFFFFFFF              mov rax, -1             ; Fill rax up with 1s
    21 0000000B 8A0425[00000000]            mov al, byte [bNum]     ; This does NOT clear the upper bits of rax
    22 00000012 4831C0                      xor rax, rax            ; Clear rax
    23 00000015 8A0425[00000000]            mov al, byte [bNum]     ; Now the upper bits of rax are cleared 
    24                                  
    25 0000001C 48C7C0FFFFFFFF              mov rax, -1
    26 00000023 668B0425[01000000]          mov ax, word [wNum]     ; This does not clear the upper bits of rax either 
    27 0000002B 4831C0                      xor rax, rax
    28 0000002E 668B0425[01000000]          mov ax, word [wNum]
    29                                  
    30 00000036 48C7C0FFFFFFFF              mov rax, -1
    31 0000003D 8B0425[03000000]            mov eax, dword [dNum]   ; This clears the upper bits of rax
    32                                  
    33 00000044 48C7C0FFFFFFFF              mov rax, -1
    34 0000004B 488B0425[07000000]          mov rax, qword [qNum1]  ; This clears rax too
    35 00000053 48890425[0F000000]          mov qword [qNum2], rax
    36 0000005B B840E20100                  mov rax, 123456
    37                                  
    38 00000060 F30F7E0425-                 movq xmm0, [qNum3]
    38 00000065 [17000000]         
    39                                  
    40 00000069 4889EC                      mov rsp, rbp
    41 0000006C 5D                          pop rbp
    42                                  
    43 0000006D C3                          ret
    44                                  
    45                                  ;************************************************************************************************
    46                                  ; -> Copying a value into an 8 or 16-bit register does not clear the higher part of the register
    47                                  ; -> Copying in a value into a 32-bit register does clear it, however
    48                                  ;************************************************************************************************
